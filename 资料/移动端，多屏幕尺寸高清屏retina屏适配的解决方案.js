https://blog.csdn.net/kormondor/article/details/77894246
https://www.cnblogs.com/lunarorbitx/p/5287309.html

物理像素:一个物理像素是显示器(手机屏幕)上最小的物理显示单元，在操作系统的调度下，每一个设备像素都有自己的颜色值和亮度值。
独立像素：抽象的，与密度无关的像素，程序使用的虚拟像素，css
设备像素比(dpr device pixel ratio)：1个独立像素===多少个物理像素 window.devicePixelRatio获取到当前设备的dpr

iphone6 为列子，  独立像素 375×667， 物理像素 640*1334   那么dpr =2
意味着 1个css像素要==4个物理像素  长*宽
在普通屏幕下，1个css像素 对应 1个物理像素(1:1)。
在retina 屏幕下，1个css像素对应 4个物理像素(1:4)。

带来的图片问题：
1位图像素==1物理像素=1设备像素 才是最完美的显示

dpr=2的retina的情况：
1个位图=4个物理像素，那么像素是最小单位不能被分割，所以只能就近取值，会导致图片模糊
所以，对于图片高清问题，比较好的方案就是两倍图片(@2x)。
如：200×300(css pixel)img标签，就需要提供400×600的图片。
如此一来，位图像素点个数就是原来的4倍，在retina屏幕下，位图像素点个数就可以跟物理像素点个数形成 1 : 1的比例，图片自然就清晰了(这也解释了之前留下的一个问题，为啥视觉稿的画布大小要×2？)。

如果普通屏幕下，也用了两倍图片，会怎样呢？
很明显，在普通屏幕下，200×300(css pixel)img标签，所对应的物理像素个数就是200×300个，而两倍图片的位图像素个数则是200×300*4，所以就出现一个物理像素点对应4个位图像素点，所以它的取色也只能通过一定的算法(显示结果就是一张只有原图像素总数四分之一，我们称这个过程叫做downsampling)，肉眼看上去虽然图片不会模糊，但是会觉得图片缺少一些锐利度，或者是有点色差(但还是可以接受的)。


所以：模糊，类似拉伸， 锐度，类似挤压

